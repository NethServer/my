# Build stage
FROM golang:1.23.4-alpine AS builder

# Install git and ca-certificates
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the CLI application with version information
ARG VERSION=dev
ARG COMMIT=unknown
ARG BUILD_TIME=unknown

RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo \
    -ldflags "-X github.com/nethesis/my/sync/pkg/version.Version=${VERSION} \
              -X github.com/nethesis/my/sync/pkg/version.Commit=${COMMIT} \
              -X github.com/nethesis/my/sync/pkg/version.BuildTime=${BUILD_TIME}" \
    -o sync ./cmd/sync/main.go

# Final stage
FROM alpine:3.21

# Install ca-certificates for HTTPS requests to Logto API
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Create directory for configs
RUN mkdir -p /app/configs && chown appuser:appgroup /app/configs

WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/sync .

# Copy configuration files
COPY --from=builder /app/configs/ ./configs/

# Change ownership
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Default command shows help
CMD ["./sync", "--help"]