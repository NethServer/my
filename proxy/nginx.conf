events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # DNS resolver for dynamic upstream resolution
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    server {
        listen ${PORT};
        server_name _;

        # Health check endpoint for this proxy
        location /health {
            access_log off;
            return 200 "nginx proxy healthy\n";
            add_header Content-Type text/plain;
        }

        # Collect service routes - redirect without trailing slash
        location = /collect/api {
            return 301 /collect/api/;
        }

        location /collect/api/ {
            set $collect_upstream https://${COLLECT_SERVICE_NAME}.onrender.com;
            rewrite ^/collect/api/(.*)$ /api/$1 break;
            proxy_pass $collect_upstream;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_set_header Host ${COLLECT_SERVICE_NAME}.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Backend service routes - redirect without trailing slash
        location = /backend/api {
            return 301 /backend/api/;
        }

        location /backend/api/ {
            set $backend_upstream https://${BACKEND_SERVICE_NAME}.onrender.com;
            rewrite ^/backend/api/(.*)$ /api/$1 break;
            proxy_pass $backend_upstream;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_set_header Host ${BACKEND_SERVICE_NAME}.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Frontend routes - everything else
        location / {
            set $frontend_upstream https://${FRONTEND_SERVICE_NAME}.onrender.com;
            proxy_pass $frontend_upstream;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_set_header Host ${FRONTEND_SERVICE_NAME}.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
    }
}