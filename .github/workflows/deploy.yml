name: Deploy Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to deploy (e.g. v0.0.5)'
        required: true
        type: string

run-name: Deploy Production ${{ inputs.version }}

jobs:
  checkout-tag:
    name: Checkout Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag for reference
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
          fetch-depth: 0

      - name: Verify tag exists
        run: |
          echo "✅ Successfully checked out tag: ${{ inputs.version }}"
          git describe --tags --exact-match HEAD || {
            echo "❌ Tag ${{ inputs.version }} not found or not properly checked out"
            exit 1
          }
          echo "📋 Commit SHA: $(git rev-parse HEAD)"
          echo "📅 Commit date: $(git log -1 --format=%cd --date=iso)"
          echo "👤 Author: $(git log -1 --format='%an <%ae>')"

  verify-images:
    name: Verify Docker Images
    runs-on: ubuntu-latest
    needs: checkout-tag
    steps:
      - name: Verify All Images Exist
        run: |
          echo "Verifying all Docker images exist for version ${{ inputs.version }}"

          # Check all images
          for image in backend collect frontend proxy; do
            echo "Checking: ghcr.io/nethserver/my/$image:${{ inputs.version }}"
            docker manifest inspect ghcr.io/nethserver/my/$image:${{ inputs.version }} || {
              echo "❌ Image not found: ghcr.io/nethserver/my/$image:${{ inputs.version }}"
              echo "Please ensure the release workflow has completed successfully."
              exit 1
            }
            echo "✅ $image image found"
          done

          echo "🎉 All Docker images verified successfully"

  update-render-config:
    name: Update Render Configuration
    runs-on: ubuntu-latest
    needs: [checkout-tag, verify-images]
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update render.yaml with new image tags
        run: |
          echo "Updating render.yaml with version ${{ inputs.version }}"

          # Update backend image tag
          sed -i 's|ghcr.io/nethserver/my/backend:v[0-9]*\.[0-9]*\.[0-9]*|ghcr.io/nethserver/my/backend:${{ inputs.version }}|g' render.yaml

          # Update collect image tag
          sed -i 's|ghcr.io/nethserver/my/collect:v[0-9]*\.[0-9]*\.[0-9]*|ghcr.io/nethserver/my/collect:${{ inputs.version }}|g' render.yaml

          # Update frontend image tag
          sed -i 's|ghcr.io/nethserver/my/frontend:v[0-9]*\.[0-9]*\.[0-9]*|ghcr.io/nethserver/my/frontend:${{ inputs.version }}|g' render.yaml

          # Update proxy image tag
          sed -i 's|ghcr.io/nethserver/my/proxy:v[0-9]*\.[0-9]*\.[0-9]*|ghcr.io/nethserver/my/proxy:${{ inputs.version }}|g' render.yaml

          echo "Updated render.yaml:"
          grep -A1 "url: ghcr.io/nethserver/my/" render.yaml

      - name: Commit updated render.yaml
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if git diff --quiet render.yaml; then
            echo "No changes to commit"
          else
            git add render.yaml
            git commit -m "chore: update render.yaml to use ${{ inputs.version }} images"
            git push origin main
            echo "✅ render.yaml updated and committed to main branch"
          fi

  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [checkout-tag, verify-images, update-render-config]
    if: always()
    steps:
      - name: Print Deployment Summary
        run: |
          echo "# 🚀 Deployment Summary for ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Deployment Method" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Blueprint Sync** - render.yaml updated with new image tags" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Auto-Deploy** - Render will automatically deploy updated services" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Docker Images Updated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: \`ghcr.io/nethserver/my/backend:${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Collect: \`ghcr.io/nethserver/my/collect:${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: \`ghcr.io/nethserver/my/frontend:${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Proxy: \`ghcr.io/nethserver/my/proxy:${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**render.yaml updated and committed!** 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Monitor deployment progress at [Render Dashboard](https://dashboard.render.com)" >> $GITHUB_STEP_SUMMARY