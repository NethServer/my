name: PR - Build Triggers on Comment

on:
  issue_comment:
    types: [created]

jobs:
  update-build-triggers:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == 'update deploy' &&
      contains(fromJson('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.comment.author_association)
    name: Update Build Triggers
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Safety check: Never allow commits to main or master
            if (pr.data.head.ref === 'main' || pr.data.head.ref === 'master') {
              core.setFailed(`üö® SAFETY CHECK FAILED: Cannot commit to protected branch '${pr.data.head.ref}'. This action only works on feature branches.`);
              return;
            }
            
            core.setOutput('head_ref', pr.data.head.ref);
            core.setOutput('head_repo', pr.data.head.repo.full_name);
            core.setOutput('head_sha', pr.data.head.sha);
            
            console.log('PR details:');
            console.log('Head ref:', pr.data.head.ref);
            console.log('Head repo:', pr.data.head.repo.full_name);
            console.log('Head SHA:', pr.data.head.sha);

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ steps.pr.outputs.head_repo }}
          ref: ${{ steps.pr.outputs.head_ref }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update build trigger files
        id: update
        run: |
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "Updating build triggers with timestamp: $TIMESTAMP"
          UPDATED_FILES=()

          for component in backend collect frontend proxy; do
            if [ -f "$component/.render-build-trigger" ]; then
              echo "Updating $component/.render-build-trigger"
              perl -i -pe "s/LAST_UPDATE=.*/LAST_UPDATE=$TIMESTAMP/" "$component/.render-build-trigger"
              UPDATED_FILES+=("$component/.render-build-trigger")
            else
              echo "Warning: $component/.render-build-trigger not found, skipping"
            fi
          done

          if git diff --quiet; then
            echo "No changes detected in build trigger files"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Build trigger files updated successfully"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changed files:"
            git diff --name-only
            echo "Changes:"
            git diff
          fi

      - name: Commit and push changes
        if: steps.update.outputs.changed == 'true'
        run: |
          # Double safety check: Verify we're not on main/master
          CURRENT_BRANCH=$(git branch --show-current)
          TARGET_BRANCH="${{ steps.pr.outputs.head_ref }}"
          
          echo "Current branch: $CURRENT_BRANCH"
          echo "Target branch: $TARGET_BRANCH"
          
          if [[ "$TARGET_BRANCH" == "main" || "$TARGET_BRANCH" == "master" ]]; then
            echo "üö® SAFETY CHECK FAILED: Refusing to commit to protected branch '$TARGET_BRANCH'"
            exit 1
          fi
          
          if [[ "$CURRENT_BRANCH" == "main" || "$CURRENT_BRANCH" == "master" ]]; then
            echo "üö® SAFETY CHECK FAILED: Currently on protected branch '$CURRENT_BRANCH'"
            exit 1
          fi
          
          echo "‚úÖ Safety checks passed. Proceeding with commit to branch: $TARGET_BRANCH"
          
          git add */.render-build-trigger
          git commit -m "chore: update build triggers for PR deployment

          Auto-updated .render-build-trigger files to ensure all services
          are deployed in PR preview environments.

          ü§ñ Generated by GitHub Actions"
          git push origin HEAD:${{ steps.pr.outputs.head_ref }}

      - name: Add comment to PR
        if: steps.update.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ **Build triggers updated!**\n\nAll `.render-build-trigger` files have been automatically updated to ensure fresh deployments of all services in the PR preview environment.\n'
            })

      - name: Summary
        run: |
          if [ "${{ steps.update.outputs.changed }}" == "true" ]; then
            echo "‚úÖ Build triggers updated and committed to PR"
            echo "All Docker services will be rebuilt in Render preview environment"
          else
            echo "‚ÑπÔ∏è No build trigger updates needed"
            echo "Build trigger timestamps are already current"
          fi
