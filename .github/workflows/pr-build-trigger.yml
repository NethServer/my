name: PR - Update Build Triggers

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ main ]
  push:
    branches-ignore: [ main ]

jobs:
  update-build-triggers:
    name: Update Build Triggers
    runs-on: ubuntu-latest

    # Only run if not triggered by the bot itself to avoid infinite loops
    # and skip if the commit message contains our build trigger marker
    if: |
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.head_commit.message, 'chore: update build triggers')

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update build trigger files
        run: |
          # Get current timestamp in ISO format
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "Updating build triggers with timestamp: $TIMESTAMP"

          # Update all .render-build-trigger files
          UPDATED_FILES=()

          for component in backend collect frontend proxy; do
            if [ -f "$component/.render-build-trigger" ]; then
              echo "Updating $component/.render-build-trigger"
              perl -i -pe "s/LAST_UPDATE=.*/LAST_UPDATE=$TIMESTAMP/" "$component/.render-build-trigger"
              UPDATED_FILES+=("$component/.render-build-trigger")
            else
              echo "Warning: $component/.render-build-trigger not found, skipping"
            fi
          done

          # Check if any files were actually changed
          if git diff --quiet; then
            echo "No changes detected in build trigger files"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Build trigger files updated successfully"
            echo "changed=true" >> $GITHUB_OUTPUT

            # Show what changed
            echo "Changed files:"
            git diff --name-only

            # Show the diff
            echo "Changes:"
            git diff
          fi
        id: update

      - name: Commit and push changes
        if: steps.update.outputs.changed == 'true'
        run: |
          # Add all modified .render-build-trigger files
          git add */.render-build-trigger

          # Commit the changes
          git commit -m "chore: update build triggers for PR deployment

          Auto-updated .render-build-trigger files to ensure all services
          are deployed in PR preview environments.

          ü§ñ Generated by GitHub Actions"

          # Push changes back to the PR branch
          git push origin ${{ github.head_ref }}

      - name: Add comment to PR
        if: steps.update.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ **Build triggers updated!**\n\nAll `.render-build-trigger` files have been automatically updated to ensure fresh deployments of all services in the PR preview environment.\n'
            })

      - name: Summary
        run: |
          if [ "${{ steps.update.outputs.changed }}" == "true" ]; then
            echo "‚úÖ Build triggers updated and committed to PR"
            echo "All Docker services will be rebuilt in Render preview environment"
          else
            echo "‚ÑπÔ∏è No build trigger updates needed"
            echo "Build trigger timestamps are already current"
          fi